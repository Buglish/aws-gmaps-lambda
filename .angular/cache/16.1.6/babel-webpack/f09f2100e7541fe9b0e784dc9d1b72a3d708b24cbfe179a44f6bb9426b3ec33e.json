{"ast":null,"code":"import _asyncToGenerator from \"C:/Dev/Angular/Map/MapTestAWS/aws-gmaps/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nexport class MapComponent {\n  ngOnInit() {\n    this.initMap();\n  }\n  initMap() {\n    return _asyncToGenerator(function* () {\n      const {\n        Map,\n        InfoWindow\n      } = yield google.maps.importLibrary(\"maps\");\n      const {\n        AdvancedMarkerElement,\n        PinElement\n      } = yield google.maps.importLibrary(\"marker\");\n      const curLatlng = {\n        lat: -43.528,\n        lng: 172.601\n      };\n      const map = new google.maps.Map(document.getElementById(\"map\"), {\n        center: curLatlng,\n        zoom: 12\n      });\n      let infoWindow = new google.maps.InfoWindow({\n        content: \"Click the map to log position.\",\n        position: curLatlng\n      });\n      infoWindow.open(map);\n      map.addListener(\"click\", mapsMouseEvent => {\n        console.log(mapsMouseEvent.latLng);\n        infoWindow.close();\n        infoWindow = new google.maps.InfoWindow({\n          position: mapsMouseEvent.latLng\n        });\n        infoWindow.setContent(JSON.stringify(mapsMouseEvent.latLng.toJSON(), null, 2));\n        infoWindow.open(map);\n        const position = mapsMouseEvent.latLng;\n        const marker = new AdvancedMarkerElement({\n          position,\n          map,\n          title: `${i + 1}. ${title}`,\n          content: pin.element\n        });\n        marker.addListener('click', ({\n          domEvent,\n          latLng\n        }) => {\n          const {\n            target\n          } = domEvent;\n          infoWindow.close();\n          infoWindow.setContent(marker.title);\n          infoWindow.open(marker.map, marker);\n        });\n      });\n    })();\n  }\n}\nMapComponent.ɵfac = function MapComponent_Factory(t) {\n  return new (t || MapComponent)();\n};\nMapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MapComponent,\n  selectors: [[\"app-map\"]],\n  decls: 5,\n  vars: 0,\n  consts: [[\"id\", \"map\", 2, \"width\", \"100%\", \"height\", \"400px\"]],\n  template: function MapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"Select location to store in DB\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"div\", 0);\n      i0.ɵɵelementStart(3, \"p\");\n      i0.ɵɵtext(4, \"reloading page will reset pins.\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"map[_ngcontent-%COMP%] {\\n    height: 100%;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWFwL21hcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtFQUNkIiwic291cmNlc0NvbnRlbnQiOlsibWFwIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["MapComponent","ngOnInit","initMap","_asyncToGenerator","Map","InfoWindow","google","maps","importLibrary","AdvancedMarkerElement","PinElement","curLatlng","lat","lng","map","document","getElementById","center","zoom","infoWindow","content","position","open","addListener","mapsMouseEvent","console","log","latLng","close","setContent","JSON","stringify","toJSON","marker","title","i","pin","element","domEvent","target","selectors","decls","vars","consts","template","MapComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["C:\\Dev\\Angular\\Map\\MapTestAWS\\aws-gmaps\\src\\app\\map\\map.component.ts","C:\\Dev\\Angular\\Map\\MapTestAWS\\aws-gmaps\\src\\app\\map\\map.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\ndeclare const google: any;\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n  ngOnInit() {\n    this.initMap();\n  }\n\n  async initMap(): Promise<void> {\n    const { Map, InfoWindow } = await google.maps.importLibrary(\"maps\") as google.maps.MapsLibrary;\n    const { AdvancedMarkerElement, PinElement } = await google.maps.importLibrary(\"marker\") as google.maps.MarkerLibrary;\n\n    const curLatlng = { lat: -43.528, lng: 172.601 };\n    const map = new google.maps.Map(document.getElementById(\"map\"), {         \n        center: curLatlng,\n        zoom: 12,\n      }\n    );\n\n \n  let infoWindow = new google.maps.InfoWindow({\n    content: \"Click the map to log position.\",\n    position: curLatlng,\n  });\n\n  infoWindow.open(map);\n  \n    map.addListener(\"click\", (mapsMouseEvent) => {\n      console.log( mapsMouseEvent.latLng); \n\n      infoWindow.close();\n      infoWindow = new google.maps.InfoWindow({\n        position: mapsMouseEvent.latLng,\n      });\n      infoWindow.setContent(\n        JSON.stringify(mapsMouseEvent.latLng.toJSON(), null, 2)\n      );\n      infoWindow.open(map);\n      const position = mapsMouseEvent.latLng;\n      const marker = new AdvancedMarkerElement({\n        position,\n        map,\n        title: `${i + 1}. ${title}`,\n        content: pin.element,\n      });\n      \n      marker.addListener('click', ({ domEvent, latLng }) => {\n        const { target } = domEvent;\n        infoWindow.close();\n        infoWindow.setContent(marker.title);\n        infoWindow.open(marker.map, marker);\n      });\n\n\n    });\n    \n  }\n\n\n}\n\n","<p>Select location to store in DB</p>\n<div id=\"map\" style=\"width: 100%; height: 400px;\"></div>\n<p>reloading page will reset pins.</p>\n"],"mappings":";;AASA,OAAM,MAAOA,YAAY;EACvBC,QAAQA,CAAA;IACN,IAAI,CAACC,OAAO,EAAE;EAChB;EAEMA,OAAOA,CAAA;IAAA,OAAAC,iBAAA;MACX,MAAM;QAAEC,GAAG;QAAEC;MAAU,CAAE,SAASC,MAAM,CAACC,IAAI,CAACC,aAAa,CAAC,MAAM,CAA4B;MAC9F,MAAM;QAAEC,qBAAqB;QAAEC;MAAU,CAAE,SAASJ,MAAM,CAACC,IAAI,CAACC,aAAa,CAAC,QAAQ,CAA8B;MAEpH,MAAMG,SAAS,GAAG;QAAEC,GAAG,EAAE,CAAC,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAE;MAChD,MAAMC,GAAG,GAAG,IAAIR,MAAM,CAACC,IAAI,CAACH,GAAG,CAACW,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,EAAE;QAC5DC,MAAM,EAAEN,SAAS;QACjBO,IAAI,EAAE;OACP,CACF;MAGH,IAAIC,UAAU,GAAG,IAAIb,MAAM,CAACC,IAAI,CAACF,UAAU,CAAC;QAC1Ce,OAAO,EAAE,gCAAgC;QACzCC,QAAQ,EAAEV;OACX,CAAC;MAEFQ,UAAU,CAACG,IAAI,CAACR,GAAG,CAAC;MAElBA,GAAG,CAACS,WAAW,CAAC,OAAO,EAAGC,cAAc,IAAI;QAC1CC,OAAO,CAACC,GAAG,CAAEF,cAAc,CAACG,MAAM,CAAC;QAEnCR,UAAU,CAACS,KAAK,EAAE;QAClBT,UAAU,GAAG,IAAIb,MAAM,CAACC,IAAI,CAACF,UAAU,CAAC;UACtCgB,QAAQ,EAAEG,cAAc,CAACG;SAC1B,CAAC;QACFR,UAAU,CAACU,UAAU,CACnBC,IAAI,CAACC,SAAS,CAACP,cAAc,CAACG,MAAM,CAACK,MAAM,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,CACxD;QACDb,UAAU,CAACG,IAAI,CAACR,GAAG,CAAC;QACpB,MAAMO,QAAQ,GAAGG,cAAc,CAACG,MAAM;QACtC,MAAMM,MAAM,GAAG,IAAIxB,qBAAqB,CAAC;UACvCY,QAAQ;UACRP,GAAG;UACHoB,KAAK,EAAE,GAAGC,CAAC,GAAG,CAAC,KAAKD,KAAK,EAAE;UAC3Bd,OAAO,EAAEgB,GAAG,CAACC;SACd,CAAC;QAEFJ,MAAM,CAACV,WAAW,CAAC,OAAO,EAAE,CAAC;UAAEe,QAAQ;UAAEX;QAAM,CAAE,KAAI;UACnD,MAAM;YAAEY;UAAM,CAAE,GAAGD,QAAQ;UAC3BnB,UAAU,CAACS,KAAK,EAAE;UAClBT,UAAU,CAACU,UAAU,CAACI,MAAM,CAACC,KAAK,CAAC;UACnCf,UAAU,CAACG,IAAI,CAACW,MAAM,CAACnB,GAAG,EAAEmB,MAAM,CAAC;QACrC,CAAC,CAAC;MAGJ,CAAC,CAAC;IAAC;EAEL;;AArDWjC,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;QAAZA,YAAY;EAAAwC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTzBE,EAAA,CAAAC,cAAA,QAAG;MAAAD,EAAA,CAAAE,MAAA,qCAA8B;MAAAF,EAAA,CAAAG,YAAA,EAAI;MACrCH,EAAA,CAAAI,SAAA,aAAwD;MACxDJ,EAAA,CAAAC,cAAA,QAAG;MAAAD,EAAA,CAAAE,MAAA,sCAA+B;MAAAF,EAAA,CAAAG,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}