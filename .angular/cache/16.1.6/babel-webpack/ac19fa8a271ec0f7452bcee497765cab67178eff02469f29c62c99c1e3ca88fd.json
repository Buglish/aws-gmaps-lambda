{"ast":null,"code":"import _asyncToGenerator from \"C:/Dev/Angular/Map/MapTestAWS/aws-gmaps/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nexport class MapComponent {\n  ngOnInit() {\n    this.initMap();\n  }\n  initMap() {\n    return _asyncToGenerator(function* () {\n      const startLoc = {\n        lat: -43.528,\n        lng: 172.601\n      };\n      const map = new google.maps.Map(document.getElementById(\"map\"), {\n        center: startLoc,\n        zoom: 10\n      });\n      // Create the initial InfoWindow.\n      let infoWindow = new google.maps.InfoWindow({\n        content: \"Click the map to get Lat/Lng!\",\n        position: myLatlng\n      });\n      // const marker = new google.maps.Marker({\n      //   position: startLoc,\n      //   map,\n      //   title: \"Click to zoom\",\n      // });\n      // map.addListener(\"center_changed\", () => {\n      //   // 3 seconds after the center of the map has changed, pan back to the\n      //   // marker.\n      //   // window.setTimeout(() => {\n      //   //   map.panTo(marker.getPosition() as google.maps.LatLng);\n      //   // }, 3000);\n      //   console.log(\"center_changed\");\n      // });\n      // Configure the click listener.\n      map.addListener(\"click\", mapsMouseEvent => {\n        // Close the current InfoWindow.\n        infoWindow.close();\n        // Create a new InfoWindow.\n        infoWindow = new google.maps.InfoWindow({\n          position: mapsMouseEvent.latLng\n        });\n        infoWindow.setContent(JSON.stringify(mapsMouseEvent.latLng.toJSON(), null, 2));\n        infoWindow.open(map);\n      });\n    })();\n  }\n}\nMapComponent.ɵfac = function MapComponent_Factory(t) {\n  return new (t || MapComponent)();\n};\nMapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MapComponent,\n  selectors: [[\"app-map\"]],\n  decls: 5,\n  vars: 0,\n  consts: [[\"id\", \"map\", 2, \"width\", \"100%\", \"height\", \"400px\"]],\n  template: function MapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"Select location to store in DB\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"div\", 0);\n      i0.ɵɵelementStart(3, \"p\");\n      i0.ɵɵtext(4, \"reloading page will reset pins.\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"map[_ngcontent-%COMP%] {\\n    height: 100%;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWFwL21hcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtFQUNkIiwic291cmNlc0NvbnRlbnQiOlsibWFwIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["MapComponent","ngOnInit","initMap","_asyncToGenerator","startLoc","lat","lng","map","google","maps","Map","document","getElementById","center","zoom","infoWindow","InfoWindow","content","position","myLatlng","addListener","mapsMouseEvent","close","latLng","setContent","JSON","stringify","toJSON","open","selectors","decls","vars","consts","template","MapComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["C:\\Dev\\Angular\\Map\\MapTestAWS\\aws-gmaps\\src\\app\\map\\map.component.ts","C:\\Dev\\Angular\\Map\\MapTestAWS\\aws-gmaps\\src\\app\\map\\map.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\ndeclare const google: any;\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n  ngOnInit() {\n    this.initMap();\n  }\n\n  async initMap(): Promise<void> {\n    const startLoc = { lat: -43.528, lng: 172.601 };\n    const map = new google.maps.Map(document.getElementById(\"map\"), {         \n        center: startLoc,\n        zoom: 10,\n      }\n    );\n\n    // Create the initial InfoWindow.\n  let infoWindow = new google.maps.InfoWindow({\n    content: \"Click the map to get Lat/Lng!\",\n    position: myLatlng,\n  });\n\n    // const marker = new google.maps.Marker({\n    //   position: startLoc,\n    //   map,\n    //   title: \"Click to zoom\",\n    // });\n  \n    // map.addListener(\"center_changed\", () => {\n    //   // 3 seconds after the center of the map has changed, pan back to the\n    //   // marker.\n    //   // window.setTimeout(() => {\n    //   //   map.panTo(marker.getPosition() as google.maps.LatLng);\n    //   // }, 3000);\n    //   console.log(\"center_changed\");\n    // });\n  \n    // Configure the click listener.\n    map.addListener(\"click\", (mapsMouseEvent) => {\n    // Close the current InfoWindow.\n    infoWindow.close();\n\n    // Create a new InfoWindow.\n    infoWindow = new google.maps.InfoWindow({\n      position: mapsMouseEvent.latLng,\n    });\n    infoWindow.setContent(\n      JSON.stringify(mapsMouseEvent.latLng.toJSON(), null, 2)\n    );\n    infoWindow.open(map);\n    });\n    \n  }\n\n\n}\n\n","<p>Select location to store in DB</p>\n<div id=\"map\" style=\"width: 100%; height: 400px;\"></div>\n<p>reloading page will reset pins.</p>\n"],"mappings":";;AASA,OAAM,MAAOA,YAAY;EACvBC,QAAQA,CAAA;IACN,IAAI,CAACC,OAAO,EAAE;EAChB;EAEMA,OAAOA,CAAA;IAAA,OAAAC,iBAAA;MACX,MAAMC,QAAQ,GAAG;QAAEC,GAAG,EAAE,CAAC,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAE;MAC/C,MAAMC,GAAG,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,EAAE;QAC5DC,MAAM,EAAET,QAAQ;QAChBU,IAAI,EAAE;OACP,CACF;MAED;MACF,IAAIC,UAAU,GAAG,IAAIP,MAAM,CAACC,IAAI,CAACO,UAAU,CAAC;QAC1CC,OAAO,EAAE,+BAA+B;QACxCC,QAAQ,EAAEC;OACX,CAAC;MAEA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACAZ,GAAG,CAACa,WAAW,CAAC,OAAO,EAAGC,cAAc,IAAI;QAC5C;QACAN,UAAU,CAACO,KAAK,EAAE;QAElB;QACAP,UAAU,GAAG,IAAIP,MAAM,CAACC,IAAI,CAACO,UAAU,CAAC;UACtCE,QAAQ,EAAEG,cAAc,CAACE;SAC1B,CAAC;QACFR,UAAU,CAACS,UAAU,CACnBC,IAAI,CAACC,SAAS,CAACL,cAAc,CAACE,MAAM,CAACI,MAAM,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,CACxD;QACDZ,UAAU,CAACa,IAAI,CAACrB,GAAG,CAAC;MACpB,CAAC,CAAC;IAAC;EAEL;;AAjDWP,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;QAAZA,YAAY;EAAA6B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTzBE,EAAA,CAAAC,cAAA,QAAG;MAAAD,EAAA,CAAAE,MAAA,qCAA8B;MAAAF,EAAA,CAAAG,YAAA,EAAI;MACrCH,EAAA,CAAAI,SAAA,aAAwD;MACxDJ,EAAA,CAAAC,cAAA,QAAG;MAAAD,EAAA,CAAAE,MAAA,sCAA+B;MAAAF,EAAA,CAAAG,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}