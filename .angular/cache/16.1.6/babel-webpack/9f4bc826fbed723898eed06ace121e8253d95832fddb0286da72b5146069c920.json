{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RestAPIService {\n  constructor(http) {\n    this.http = http;\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  postMapPin(pin) {\n    const respo = '';\n    let url = \"https://mu6czotm8h.execute-api.ap-southeast-2.amazonaws.com/prod/mappinlog\";\n    this.http.post(url, pin, this.httpOptions).subscribe(data => {\n      return data.toString;\n    });\n    return respo;\n  }\n}\nRestAPIService.ɵfac = function RestAPIService_Factory(t) {\n  return new (t || RestAPIService)(i0.ɵɵinject(i1.HttpClient));\n};\nRestAPIService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RestAPIService,\n  factory: RestAPIService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","RestAPIService","constructor","http","httpOptions","headers","postMapPin","pin","respo","url","post","subscribe","data","toString","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Dev\\Angular\\Map\\buglish\\aws-gmaps-lambda\\src\\app\\rest-api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestAPIService {\n\n  constructor(private http: HttpClient) { \n\n  }\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  postMapPin(pin: any) {\n    const respo = '';\n    let url = \"https://mu6czotm8h.execute-api.ap-southeast-2.amazonaws.com/prod/mappinlog\";\n    this.http.post(url, pin, this.httpOptions).subscribe(data => {\n      return data.toString;\n  });\n\n     return respo;\n  }\n\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAK9D,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAIxB,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIL,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;EAND;EAQAM,UAAUA,CAACC,GAAQ;IACjB,MAAMC,KAAK,GAAG,EAAE;IAChB,IAAIC,GAAG,GAAG,4EAA4E;IACtF,IAAI,CAACN,IAAI,CAACO,IAAI,CAACD,GAAG,EAAEF,GAAG,EAAE,IAAI,CAACH,WAAW,CAAC,CAACO,SAAS,CAACC,IAAI,IAAG;MAC1D,OAAOA,IAAI,CAACC,QAAQ;IACxB,CAAC,CAAC;IAEC,OAAOL,KAAK;EACf;;AApBWP,cAAc,C;mBAAdA,cAAc,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdhB,cAAc,C;SAAdA,cAAc;EAAAiB,OAAA,EAAdjB,cAAc,CAAAkB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}